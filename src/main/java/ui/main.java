package ui;

/**
 *
 * @author legol
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iconButtonGroup = new javax.swing.ButtonGroup();
        imagePanel = new ui.ImagePanel();
        imagePanel.AddImage("mainImage.png");
        TRIconImagePanel = new ui.ImagePanel();
        TRIconImagePanel.AddImage("icon.png");
        TRIconImagePanel.setOpaque(false);
        TLIconImagePanel = new ui.ImagePanel();
        TLIconImagePanel.AddImage("icon.png");
        TLIconImagePanel.setOpaque(false);
        TLIconImagePanel.setVisible(false);
        BRIconImagePanel = new ui.ImagePanel();
        BRIconImagePanel.AddImage("icon.png");
        BRIconImagePanel.setOpaque(false);
        BRIconImagePanel.setVisible(false);
        BLIconImagePanel = new ui.ImagePanel();
        BLIconImagePanel.AddImage("icon.png");
        BLIconImagePanel.setOpaque(false);
        BLIconImagePanel.setVisible(false);
        optionPanel = new javax.swing.JPanel();
        colorPanel = new javax.swing.JPanel();
        redCheckBox = new javax.swing.JCheckBox();
        greenCheckBox = new javax.swing.JCheckBox();
        blueCheckBox = new javax.swing.JCheckBox();
        allCheckBox = new javax.swing.JCheckBox();
        iconPanel = new javax.swing.JPanel();
        TLRadioButton = new javax.swing.JRadioButton();
        TRRadioButton = new javax.swing.JRadioButton();
        BLRadioButton = new javax.swing.JRadioButton();
        BRRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        imagePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout TRIconImagePanelLayout = new javax.swing.GroupLayout(TRIconImagePanel);
        TRIconImagePanel.setLayout(TRIconImagePanelLayout);
        TRIconImagePanelLayout.setHorizontalGroup(
            TRIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        TRIconImagePanelLayout.setVerticalGroup(
            TRIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout TLIconImagePanelLayout = new javax.swing.GroupLayout(TLIconImagePanel);
        TLIconImagePanel.setLayout(TLIconImagePanelLayout);
        TLIconImagePanelLayout.setHorizontalGroup(
            TLIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        TLIconImagePanelLayout.setVerticalGroup(
            TLIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BRIconImagePanelLayout = new javax.swing.GroupLayout(BRIconImagePanel);
        BRIconImagePanel.setLayout(BRIconImagePanelLayout);
        BRIconImagePanelLayout.setHorizontalGroup(
            BRIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        BRIconImagePanelLayout.setVerticalGroup(
            BRIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout BLIconImagePanelLayout = new javax.swing.GroupLayout(BLIconImagePanel);
        BLIconImagePanel.setLayout(BLIconImagePanelLayout);
        BLIconImagePanelLayout.setHorizontalGroup(
            BLIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        BLIconImagePanelLayout.setVerticalGroup(
            BLIconImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createSequentialGroup()
                        .addComponent(TLIconImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TRIconImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createSequentialGroup()
                        .addComponent(BLIconImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BRIconImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TLIconImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TRIconImagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BRIconImagePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BLIconImagePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        optionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        colorPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Colores"));

        redCheckBox.setForeground(new java.awt.Color(255, 0, 0));
        redCheckBox.setSelected(true);
        redCheckBox.setText("Rojo");
        redCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redCheckBoxActionPerformed(evt);
            }
        });

        greenCheckBox.setForeground(new java.awt.Color(0, 255, 51));
        greenCheckBox.setSelected(true);
        greenCheckBox.setText("Verde");
        greenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenCheckBoxActionPerformed(evt);
            }
        });

        blueCheckBox.setForeground(new java.awt.Color(0, 0, 204));
        blueCheckBox.setSelected(true);
        blueCheckBox.setText("Azul");
        blueCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueCheckBoxActionPerformed(evt);
            }
        });

        allCheckBox.setSelected(true);
        allCheckBox.setText("Todos");
        allCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout colorPanelLayout = new javax.swing.GroupLayout(colorPanel);
        colorPanel.setLayout(colorPanelLayout);
        colorPanelLayout.setHorizontalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, colorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(allCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blueCheckBox)
                    .addComponent(redCheckBox)
                    .addComponent(greenCheckBox))
                .addContainerGap())
        );
        colorPanelLayout.setVerticalGroup(
            colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(redCheckBox)
                .addGap(18, 18, 18)
                .addGroup(colorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(greenCheckBox)
                    .addComponent(allCheckBox))
                .addGap(18, 18, 18)
                .addComponent(blueCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        iconPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Posición del icono"));

        iconButtonGroup.add(TLRadioButton);
        TLRadioButton.setText("Arriba Izquierda");
        TLRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TLRadioButtonItemStateChanged(evt);
            }
        });

        iconButtonGroup.add(TRRadioButton);
        TRRadioButton.setSelected(true);
        TRRadioButton.setText("Arriba Derecha");
        TRRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TRRadioButtonItemStateChanged(evt);
            }
        });

        iconButtonGroup.add(BLRadioButton);
        BLRadioButton.setText("Abajo Izquierda");
        BLRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BLRadioButtonItemStateChanged(evt);
            }
        });

        iconButtonGroup.add(BRRadioButton);
        BRRadioButton.setText("Abajo Derecha");
        BRRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BRRadioButtonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout iconPanelLayout = new javax.swing.GroupLayout(iconPanel);
        iconPanel.setLayout(iconPanelLayout);
        iconPanelLayout.setHorizontalGroup(
            iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iconPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(iconPanelLayout.createSequentialGroup()
                        .addComponent(TLRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(TRRadioButton))
                    .addGroup(iconPanelLayout.createSequentialGroup()
                        .addComponent(BLRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BRRadioButton)))
                .addContainerGap())
        );
        iconPanelLayout.setVerticalGroup(
            iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iconPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TLRadioButton)
                    .addComponent(TRRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(iconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BLRadioButton)
                    .addComponent(BRRadioButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout optionPanelLayout = new javax.swing.GroupLayout(optionPanel);
        optionPanel.setLayout(optionPanelLayout);
        optionPanelLayout.setHorizontalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(colorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 467, Short.MAX_VALUE)
                .addComponent(iconPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        optionPanelLayout.setVerticalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iconPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void allCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allCheckBoxActionPerformed
        if(allCheckBox.isSelected()){
            if(!redCheckBox.isSelected()){
                redCheckBox.doClick();
            }
            if(!greenCheckBox.isSelected()){
                greenCheckBox.doClick();
            }
            if(!blueCheckBox.isSelected()){
                blueCheckBox.doClick();
            }
        }
    }//GEN-LAST:event_allCheckBoxActionPerformed

    private void redCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redCheckBoxActionPerformed
        if(redCheckBox.isSelected()){
            imagePanel.ChangeChannelR(true);
            
            if(blueCheckBox.isSelected() && greenCheckBox.isSelected() && !allCheckBox.isSelected()){
                allCheckBox.doClick();
            }
        } else{
            if(allCheckBox.isSelected()){
                allCheckBox.setSelected(false);
            }
            
            if(!blueCheckBox.isSelected() && !greenCheckBox.isSelected()){
                redCheckBox.doClick();
            } else{
                imagePanel.ChangeChannelR(false);
            }
        }
    }//GEN-LAST:event_redCheckBoxActionPerformed

    private void greenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenCheckBoxActionPerformed
        if(greenCheckBox.isSelected()){
            imagePanel.ChangeChannelG(true);
            
            if(redCheckBox.isSelected() && blueCheckBox.isSelected() && !allCheckBox.isSelected()){
                allCheckBox.doClick();
            }
        } else{
            if(allCheckBox.isSelected()){
                allCheckBox.setSelected(false);
            }
            
            if(!blueCheckBox.isSelected() && !redCheckBox.isSelected()){
                greenCheckBox.doClick();
            } else{
                imagePanel.ChangeChannelG(false);
            }
        }
    }//GEN-LAST:event_greenCheckBoxActionPerformed

    private void blueCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueCheckBoxActionPerformed
        if(blueCheckBox.isSelected()){
            imagePanel.ChangeChannelB(true);
            
            if(redCheckBox.isSelected() && greenCheckBox.isSelected() && !allCheckBox.isSelected()){
                allCheckBox.doClick();
            }
            
        } else{
            if(allCheckBox.isSelected()){
                allCheckBox.setSelected(false);
            }
            
            if(!redCheckBox.isSelected() && !greenCheckBox.isSelected()){
                blueCheckBox.doClick();
            } else{
                imagePanel.ChangeChannelB(false);
            }
        }
    }//GEN-LAST:event_blueCheckBoxActionPerformed

    private void TLRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TLRadioButtonItemStateChanged
        if(TLRadioButton.isSelected()){
            TLIconImagePanel.setVisible(true);
        } else{
            TLIconImagePanel.setVisible(false);
        }
    }//GEN-LAST:event_TLRadioButtonItemStateChanged

    private void TRRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TRRadioButtonItemStateChanged
        if(TRRadioButton.isSelected()){
            TRIconImagePanel.setVisible(true);
        } else{
            TRIconImagePanel.setVisible(false);
        }
    }//GEN-LAST:event_TRRadioButtonItemStateChanged

    private void BLRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BLRadioButtonItemStateChanged
        if(BLRadioButton.isSelected()){
            BLIconImagePanel.setVisible(true);
        } else{
            BLIconImagePanel.setVisible(false);
        }
    }//GEN-LAST:event_BLRadioButtonItemStateChanged

    private void BRRadioButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BRRadioButtonItemStateChanged
        if(BRRadioButton.isSelected()){
            BRIconImagePanel.setVisible(true);
        } else{
            BRIconImagePanel.setVisible(false);
        }
    }//GEN-LAST:event_BRRadioButtonItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ui.ImagePanel BLIconImagePanel;
    private javax.swing.JRadioButton BLRadioButton;
    private ui.ImagePanel BRIconImagePanel;
    private javax.swing.JRadioButton BRRadioButton;
    private ui.ImagePanel TLIconImagePanel;
    private javax.swing.JRadioButton TLRadioButton;
    private ui.ImagePanel TRIconImagePanel;
    private javax.swing.JRadioButton TRRadioButton;
    private javax.swing.JCheckBox allCheckBox;
    private javax.swing.JCheckBox blueCheckBox;
    private javax.swing.JPanel colorPanel;
    private javax.swing.JCheckBox greenCheckBox;
    private javax.swing.ButtonGroup iconButtonGroup;
    private javax.swing.JPanel iconPanel;
    private ui.ImagePanel imagePanel;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JCheckBox redCheckBox;
    // End of variables declaration//GEN-END:variables
}
